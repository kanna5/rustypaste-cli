name: Continuous Deployment

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  publish-github:
    name: Publish on GitHub
    runs-on: ubuntu-latest
    strategy:
      matrix:
        TARGET:
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          - i686-unknown-linux-gnu
          - i686-unknown-linux-musl
          - armv5te-unknown-linux-gnueabi
          - armv7-unknown-linux-gnueabihf
          - aarch64-unknown-linux-gnu
          - aarch64-unknown-linux-musl

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Set the release version
        run: echo "RELEASE_VERSION=${GITHUB_REF:11}" >> $GITHUB_ENV

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.TARGET }}
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --locked --target ${{ matrix.TARGET }}

      - name: Prepare release assets
        run: |
          mkdir release/
          cp {LICENSE,README.md,CHANGELOG.md,config.toml} release/
          cp target/${{ matrix.TARGET }}/release/rpaste release/
          mv release/ rustypaste-cli-${{ env.RELEASE_VERSION }}/

      - name: Create release artifacts
        run: |
          tar -czvf rustypaste-cli-${{ env.RELEASE_VERSION }}-${{ matrix.TARGET }}.tar.gz \
            rustypaste-cli-${{ env.RELEASE_VERSION }}/
          sha512sum rustypaste-cli-${{ env.RELEASE_VERSION }}-${{ matrix.TARGET }}.tar.gz \
            > rustypaste-cli-${{ env.RELEASE_VERSION }}-${{ matrix.TARGET }}.tar.gz.sha512

      - name: Upload the release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: rustypaste-cli-${{ env.RELEASE_VERSION }}-${{ matrix.TARGET }}.tar.gz*
          file_glob: true
          overwrite: true
          tag: ${{ github.ref }}

  publish-crates-io:
    name: Publish on crates.io
    needs: publish-github
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Publish
        uses: actions-rs/cargo@v1
        with:
          command: publish
          args: --locked --token ${{ secrets.CARGO_TOKEN }}
